buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath files('/Users/davidsartori/Documents/projects/nab/gradle_auto_release/build/libs/gradle-auto-release-1.0.0.jar')
        classpath 'org.eclipse.jgit:org.eclipse.jgit:4.3.1.201605051710-r'
        classpath "net.researchgate:gradle-release:2.3.5"
    }
}

plugins {
    id "org.jenkins-ci.jpi" version "0.17.0"
}

group = "com.nab.jenkins.plugins"
description = "Adds a link to kick off the Gradle NAB Release plugin."

jenkinsPlugin {
    coreVersion = "2.5"
    displayName = "Auto release"
    url = "http://wiki.jenkins-ci.org/display/JENKINS/SomePluginPage"
    gitHubUrl = "https://github.aus.thenational.com/ATDCIB/jenkins_auto_release"
    shortName = "auto-release"
}

def isJenkinsBuild = rootProject.hasProperty('buildNumber')

def jenkinsSnapShot() {
    ((['origin/master', 'origin/release'].contains(rootProject.getProperty('branch'))) ? rootProject.getProperty('buildNumber')
            : 'snapshot-' + rootProject.getProperty('buildNumber'))
}

def versionBackup = version

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'com.nab.ese.gradle.autorelease'


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.jenkins-ci.plugins:plugin:2.9')
    compile('org.jenkins-ci.plugins:scriptler:2.2')
    compile('org.jenkins-ci.lib:dry-run-lib:0.1')

    providedCompile("org.projectlombok:lombok:1.16.6")
}





import java.util.regex.Matcher

apply plugin: 'net.researchgate.release'

war {
    version = version + '-' + (isJenkinsBuild ? jenkinsSnapShot() : 'local-snapshot')
}

release {
    newVersionCommitMessage = 'RELEASE - version increment'
    version = versionBackup
    git {
        requireBranch = 'release'
        versionPatterns = [
                // Increments minor number: "2.5.17-SNAPSHOT" => "2.6.0-SNAPSHOT"
                /[.]*\.(\d+)\.(\d+)[.]*/: { Matcher m, Project p -> m.replaceAll(".${(m[0][1] as int) + 1}.0") }
        ]
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
    }
}

createReleaseTag.dependsOn build
